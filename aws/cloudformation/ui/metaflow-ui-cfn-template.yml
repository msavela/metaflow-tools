AWSTemplateFormatVersion: "2010-09-09"
Description: Nested stack for deployment of Metaflow UI (last-updated-date 03/29/2021)

Parameters:
  VPCId:
    Type: AWS::EC2::VPC::Id
    Description: "VPC Id"
  VPCCidrBlock:
    Type: String
    Description: "VPC CIDR block"
  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: "List of VPC subnet Ids"
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
    Description: "Security group"
  ECSClusterId:
    Type: String
    Description: "ECS cluster Id"
  ECSTaskExecutionRoleId:
    Type: String
    Description: "ECS task execution IAM role Id"
  MetadataSvcECSTaskRoleArn:
    Type: String
    Description: "ECS service IAM role ARN"
  DatabaseHost:
    Type: String
    Description: "Database hostname"
  DatabasePort:
    Type: String
    Default: "5432"
    Description: "Database port"
  DatabaseUser:
    Type: String
    Default: "master"
    Description: "Database user"
  DatabasePassword:
    Type: String
    Description: "Database password"
  DatabaseName:
    Type: String
    Default: "metaflow"
    Description: "Database name"

Mappings:
  ServiceInfoUI:
    ServiceName:
      value: "metaflow-ui-service"
    ImageUrl:
      value: "913330534208.dkr.ecr.us-west-2.amazonaws.com/metaflow-ui-service:cloudformation"
    ContainerPort:
      value: 8083
    ContainerCpu:
      value: 512
    ContainerMemory:
      value: 1024
    DesiredCount:
      value: 1

Resources:
  # Ingress rules

  IngressRuleUIService:
    Type: "AWS::EC2::SecurityGroupIngress"
    Properties:
      Description: "Allow API Calls Internally (UI service)"
      GroupId: !Ref SecurityGroup
      IpProtocol: tcp
      FromPort: !FindInMap ["ServiceInfoUI", "ContainerPort", "value"]
      ToPort: !FindInMap ["ServiceInfoUI", "ContainerPort", "value"]
      CidrIp: !Ref VPCCidrBlock

  # Load balancer

  ALBUISecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Access to the public facing load balancer
      VpcId: !Ref VPCId
      SecurityGroupIngress:
        # Allow access to ALB from anywhere on the internet
        - CidrIp: 0.0.0.0/0
          IpProtocol: -1
  ALBUI:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Scheme: internet-facing
      Type: application
      Subnets: !Ref SubnetIds
      SecurityGroups: [!Ref ALBUISecurityGroup]
  ALBUIListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    DependsOn:
      - ALBUI
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref ALBUITargetGroupUIService
          Type: "forward"
      LoadBalancerArn: !Ref ALBUI
      Port: 80
      Protocol: HTTP
  ALBUITargetGroupUIService:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      HealthCheckIntervalSeconds: 6
      HealthCheckPath: /ping
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      TargetType: ip
      Port: !FindInMap ["ServiceInfoUI", "ContainerPort", "value"]
      Protocol: HTTP
      UnhealthyThresholdCount: 2
      VpcId: !Ref VPCId

  # Coudfront distribution

  CloudFrontDistribution:
    Type: AWS::CloudFront::Distribution
    DependsOn:
      - ALBUI
    Properties:
      DistributionConfig:
        Origins:
          - DomainName: !GetAtt "ALBUI.DNSName"
            Id: !Ref ALBUI
            CustomOriginConfig:
              HTTPPort: 80
              OriginProtocolPolicy: http-only
              OriginKeepaliveTimeout: 60
              OriginReadTimeout: 30
              OriginSSLProtocols:
                - TLSv1
                - TLSv1.1
                - TLSv1.2
                - SSLv3
        Enabled: true
        HttpVersion: http2
        DefaultCacheBehavior:
          AllowedMethods:
            - GET
            - HEAD
            - DELETE
            - OPTIONS
            - PATCH
            - POST
            - PUT
          Compress: true
          DefaultTTL: 0
          MinTTL: 0
          MaxTTL: 0
          SmoothStreaming: false
          TargetOriginId: !Ref ALBUI
          ForwardedValues:
            QueryString: true
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https
        CacheBehaviors:
          - AllowedMethods:
              - GET
              - HEAD
              - DELETE
              - OPTIONS
              - PATCH
              - POST
              - PUT
            Compress: false
            PathPattern: /api/*
            DefaultTTL: 0
            MinTTL: 0
            MaxTTL: 0
            SmoothStreaming: false
            TargetOriginId: !Ref ALBUI
            ForwardedValues:
              QueryString: true
              Cookies:
                Forward: none
            ViewerProtocolPolicy: redirect-to-https
        PriceClass: PriceClass_All
        IPV6Enabled: true

  # ESC Cluster task definition & service

  TaskDefinitionUIService:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !FindInMap ["ServiceInfoUI", "ServiceName", "value"]
      Cpu: !FindInMap ["ServiceInfoUI", "ContainerCpu", "value"]
      Memory: !FindInMap ["ServiceInfoUI", "ContainerMemory", "value"]
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ExecutionRoleArn: !Ref ECSTaskExecutionRoleId
      TaskRoleArn: !Ref MetadataSvcECSTaskRoleArn
      ContainerDefinitions:
        - Name: !FindInMap ["ServiceInfoUI", "ServiceName", "value"]
          Environment:
            - Name: "MF_METADATA_DB_HOST"
              Value: !Ref DatabaseHost
            - Name: "MF_METADATA_DB_PORT"
              Value: !Ref DatabasePort
            - Name: "MF_METADATA_DB_USER"
              Value: !Ref DatabaseUser
            - Name: "MF_METADATA_DB_PSWD"
              Value: !Ref DatabasePassword
            - Name: "MF_METADATA_DB_NAME"
              Value: !Ref DatabaseName
            - Name: "UI_ENABLED"
              Value: "1"
          Cpu: !FindInMap ["ServiceInfoUI", "ContainerCpu", "value"]
          Memory: !FindInMap ["ServiceInfoUI", "ContainerMemory", "value"]
          Image: !FindInMap ["ServiceInfoUI", "ImageUrl", "value"]
          PortMappings:
            - ContainerPort:
                !FindInMap ["ServiceInfoUI", "ContainerPort", "value"]
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group:
                !Join [
                  "",
                  [
                    "/ecs/",
                    !Ref "AWS::StackName",
                    "-",
                    !FindInMap ["ServiceInfoUI", "ServiceName", "value"],
                  ],
                ]
              awslogs-region: !Ref "AWS::Region"
              awslogs-stream-prefix: "ecs"
  ServiceLogGroupUIService:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName:
        !Join [
          "",
          [
            "/ecs/",
            !Ref "AWS::StackName",
            "-",
            !FindInMap ["ServiceInfoUI", "ServiceName", "value"],
          ],
        ]
  ECSFargateServiceUIService:
    Type: AWS::ECS::Service
    DependsOn: ALBUIListener
    Properties:
      ServiceName: !FindInMap ["ServiceInfoUI", "ServiceName", "value"]
      Cluster: !Ref ECSClusterId
      LaunchType: FARGATE
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 75
      DesiredCount: !FindInMap ["ServiceInfoUI", "DesiredCount", "value"]
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          SecurityGroups:
            - !Ref SecurityGroup
          Subnets: !Ref SubnetIds
      TaskDefinition: !Ref TaskDefinitionUIService
      LoadBalancers:
        - ContainerName: !FindInMap ["ServiceInfoUI", "ServiceName", "value"]
          ContainerPort: !FindInMap ["ServiceInfoUI", "ContainerPort", "value"]
          TargetGroupArn: !Ref ALBUITargetGroupUIService

Outputs:
  ServiceUrlUI:
    Description: "ALB URL for Metadata UI (Open to Public Access)"
    Value: !Sub "http://${ALBUI.DNSName}/"
  ServiceCloudfrontUrlUI:
    Description: "Cloudfront URL for Metadata UI (Open to Public Access)"
    Value: !Sub "https://${CloudFrontDistribution.DomainName}/"
